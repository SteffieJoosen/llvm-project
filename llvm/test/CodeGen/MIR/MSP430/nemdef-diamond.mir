# RUN: llc -O3 -x=mir -start-before=msp430-nemesis-defender -msp430-nemesis-defender-enable=true -verify-machineinstrs -o - %s | FileCheck %s

--- |
  target triple = "msp430-unknown-unknown-elf"
  
  define i16 @foo(i16 "secret" %a, i16 %b) {
  entry:
    ret i16 0
  }
...
---
name: foo
body: |
  bb.0:
    successors: %bb.1, %bb.2
    $r14 = MOV16rr $r12
    $r15 = MOV16ri 3
    CMP16rr $r14, $r13, implicit-def $sr
    JCC %bb.2, 5, implicit $sr
  
  bb.1:
    $r15 = MOV16ri 7
  
  bb.2:
    successors: %bb.3, %bb.4
    $r12 = MOV16rc 0
    CMP16rr killed $r14, $r13, implicit-def $sr
    JCC %bb.4, 0, implicit $sr
  
  bb.3:
    $r12 = MOV16rr killed $r15

  bb.4:
    successors: %bb.5, %bb.6
    CMP16ri killed $r13, 10, implicit-def $sr
    $r13 = MOV16rr $sr
    $r13 = RRA16r killed $r13, implicit-def dead $sr
    $r13b = AND8rc $r13b, 1, implicit-def dead $sr, implicit killed $r13, implicit-def $r13
    CMP8ri $r13b, 0, implicit-def $sr
    JCC %bb.6, 0, implicit $sr
  
  bb.5:
    successors: %bb.6
    $r12 = ADD16rr killed $r12, $r12, implicit-def $sr
    $r13b = SUB8ri $r13b, 1, implicit-def $sr, implicit killed $r13, implicit-def $r13
  
  bb.6:
    RET implicit $r12

  ; CHECK-LABEL: foo:
  ; CHECK-NEXT: ; %bb.0:
  ; CHECK-NEXT: 	mov	r12, r14
  ; CHECK-NEXT: 	mov	#3, r15
  ; CHECK-NEXT: 	cmp	r13, r14
  ; CHECK-NEXT: 	jl	.LBB0_7
  ; CHECK-NEXT: 	jmp	.LBB0_1
  ; CHECK-NEXT: .LBB0_1:
  ; CHECK-NEXT: 	mov	#7, r15
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: .LBB0_2:
  ; CHECK-NEXT: 	clr	r12
  ; CHECK-NEXT: 	cmp	r13, r14
  ; CHECK-NEXT: 	jeq	.LBB0_8
  ; CHECK-NEXT: 	jmp	.LBB0_3
  ; CHECK-NEXT: .LBB0_3:
  ; CHECK-NEXT: 	mov	r15, r12
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: .LBB0_4:
  ; CHECK-NEXT: 	cmp	#10, r13
  ; CHECK-NEXT: 	mov	r2, r13
  ; CHECK-NEXT: 	rra	r13
  ; CHECK-NEXT: 	and.b	#1, r13
  ; CHECK-NEXT: 	cmp.b	#0, r13
  ; CHECK-NEXT: 	jeq	.LBB0_6
  ; CHECK-NEXT: ; %bb.5:
  ; CHECK-NEXT: 	add	r12, r12
  ; CHECK-NEXT: 	sub.b	#1, r13
  ; CHECK-NEXT: .LBB0_6:
  ; CHECK-NEXT: 	ret
  ; CHECK-NEXT: .LBB0_7:
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	jmp	.LBB0_2
  ; CHECK-NEXT: .LBB0_8:
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	jmp	.LBB0_4
  ; CHECK-NEXT: .Lfunc_end0:
...

