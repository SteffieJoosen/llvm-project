# RUN: llc -O3 -x=mir -start-before=msp430-nemesis-defender -msp430-nemesis-defender-enable=true -verify-machineinstrs -o - %s | FileCheck %s

--- |
  target triple = "msp430-unknown-unknown-elf"

  define i16 @foo(i16 "secret" %a, i16 %b) {
    ret i16 3
  }

  declare i16 @bar(i16, i16)
...
---
name: foo
body: |
  bb.0:
    successors: %bb.1, %bb.17
    PUSH16r killed $r10, implicit-def $sp, implicit $sp
    PUSH16r killed $r9, implicit-def $sp, implicit $sp
    PUSH16r killed $r8, implicit-def $sp, implicit $sp
    PUSH16r killed $r7, implicit-def $sp, implicit $sp
    $r10 = MOV16rr $r13
    CMP16rr $r12, $r10, implicit-def $sr
    JCC %bb.17, 4, implicit $sr

  bb.1:
    successors: %bb.2, %bb.8
    CMP16ri killed $r12, 12, implicit-def $sr
    JCC %bb.8, 1, implicit $sr

  bb.2:
    $r9 = MOV16rc 0

  bb.3:
    $r12 = MOV16rr $r9
    $r13 = MOV16ri 513
    CALLi @bar, implicit-def dead $r11, implicit-def dead $r12, implicit-def dead $r13, implicit-def dead $r14, implicit-def dead $r15, implicit-def dead $sr, implicit $sp, implicit $r12, implicit $r13
    $r7 = MOV16rc 0

  bb.4:
    successors: %bb.5(0x04000000), %bb.4(0x7c000000)
    $r12 = MOV16rr $r9
    $r13 = MOV16rr $r7
    CALLi @bar, implicit-def dead $r11, implicit-def $r12, implicit-def dead $r13, implicit-def dead $r14, implicit-def dead $r15, implicit-def dead $sr, implicit $sp, implicit $r12, implicit $r13
    $r8 = MOV16rr $r12
    $r7 = nuw nsw ADD16rc killed $r7, 1, implicit-def dead $sr
    CMP16ri $r7, 513, implicit-def $sr
    JCC %bb.4, 1, implicit $sr

  bb.5:
    successors: %bb.6, %bb.7
    CMP16ri $r10, 12, implicit-def $sr
    JCC %bb.7, 1, implicit $sr

  bb.6:
    $r12 = MOV16rr $r8
    $r13 = MOV16rr $r8
    CALLi &__mspabi_mpyi, implicit-def dead $r11, implicit-def $r12, implicit-def dead $r13, implicit-def dead $r14, implicit-def dead $r15, implicit-def dead $sr, implicit $sp, implicit $r12, implicit $r13
    $r13 = MOV16rr $r12
    $r12 = MOV16rr killed $r8
    CALLi @bar, implicit-def dead $r11, implicit-def dead $r12, implicit-def dead $r13, implicit-def dead $r14, implicit-def dead $r15, implicit-def dead $sr, implicit $sp, implicit $r12, implicit $r13

  bb.7:
    successors: %bb.17(0x04000000), %bb.3(0x7c000000)
    $r9 = nuw nsw ADD16rc killed $r9, 1, implicit-def dead $sr
    CMP16ri $r9, 1023, implicit-def $sr
    JCC %bb.3, 1, implicit $sr
    JMP %bb.17

  bb.8:
    successors: %bb.13, %bb.9
    CMP16ri killed $r10, 12, implicit-def $sr
    JCC %bb.9, 1, implicit $sr

  bb.13:
    $r10 = MOV16rc 0

  bb.14:
    $r8 = MOV16rc 0

  bb.15:
    successors: %bb.16(0x04000000), %bb.15(0x7c000000)
    $r12 = MOV16rr $r10
    $r13 = MOV16rr $r8
    CALLi @bar, implicit-def dead $r11, implicit-def $r12, implicit-def dead $r13, implicit-def dead $r14, implicit-def dead $r15, implicit-def dead $sr, implicit $sp, implicit $r12, implicit $r13
    $r9 = MOV16rr $r12
    $r8 = nuw nsw ADD16rc killed $r8, 1, implicit-def dead $sr
    CMP16ri $r8, 513, implicit-def $sr
    JCC %bb.15, 1, implicit $sr

  bb.16:
    successors: %bb.17(0x04000000), %bb.14(0x7c000000)
    $r12 = MOV16rr $r9
    $r13 = MOV16rr $r9
    CALLi &__mspabi_mpyi, implicit-def dead $r11, implicit-def $r12, implicit-def dead $r13, implicit-def dead $r14, implicit-def dead $r15, implicit-def dead $sr, implicit $sp, implicit $r12, implicit $r13
    $r13 = MOV16rr $r12
    $r12 = MOV16rr killed $r9
    CALLi @bar, implicit-def dead $r11, implicit-def dead $r12, implicit-def dead $r13, implicit-def dead $r14, implicit-def dead $r15, implicit-def dead $sr, implicit $sp, implicit $r12, implicit $r13
    $r10 = nuw nsw ADD16rc killed $r10, 1, implicit-def dead $sr
    CMP16ri $r10, 1023, implicit-def $sr
    JCC %bb.14, 1, implicit $sr
    JMP %bb.17

  bb.9:
    $r10 = MOV16rc 0

  bb.10:
    $r9 = MOV16rc 0

  bb.11:
    successors: %bb.12(0x04000000), %bb.11(0x7c000000)
    $r12 = MOV16rr $r10
    $r13 = MOV16rr $r9
    CALLi @bar, implicit-def dead $r11, implicit-def dead $r12, implicit-def dead $r13, implicit-def dead $r14, implicit-def dead $r15, implicit-def dead $sr, implicit $sp, implicit $r12, implicit $r13
    $r9 = nuw nsw ADD16rc killed $r9, 1, implicit-def dead $sr
    CMP16ri $r9, 513, implicit-def $sr
    JCC %bb.11, 1, implicit $sr

  bb.12:
    successors: %bb.17(0x04000000), %bb.10(0x7c000000)
    $r10 = nuw nsw ADD16rc killed $r10, 1, implicit-def dead $sr
    CMP16ri $r10, 1023, implicit-def $sr
    JCC %bb.10, 1, implicit $sr

  bb.17:
    $r12 = MOV16ri 3
    $r7 = POP16r implicit-def $sp, implicit $sp
    $r8 = POP16r implicit-def $sp, implicit $sp
    $r9 = POP16r implicit-def $sp, implicit $sp
    $r10 = POP16r implicit-def $sp, implicit $sp
    RET implicit $r12

  ; CHECK-LABEL: foo:
  ; CHECK-NEXT: ; %bb.0:
  ; CHECK-NEXT: 	push	r10
  ; CHECK-NEXT: 	push	r9
  ; CHECK-NEXT: 	push	r8
  ; CHECK-NEXT: 	push	r7
  ; CHECK-NEXT: 	mov	r13, r10
  ; CHECK-NEXT: 	cmp	r10, r12
  ; CHECK-NEXT: 	jge	.LBB0_18
  ; CHECK-NEXT: 	jmp	.LBB0_1
  ; CHECK-NEXT: .LBB0_1:
  ; CHECK-NEXT: 	cmp	#12, r12
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	jne	.LBB0_8
  ; CHECK-NEXT: ; %bb.2:
  ; CHECK-NEXT: 	clr	r9
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	jmp	.LBB0_50
  ; CHECK-NEXT: .LBB0_3:
  ; CHECK:      	mov	r9, r12
  ; CHECK-NEXT: 	mov	#513, r13
  ; CHECK-NEXT: 	call	#_nds_bar
  ; CHECK-NEXT: 	clr	r7
  ; CHECK-NEXT: 	jmp	.LBB0_31
  ; CHECK-NEXT: .LBB0_4:
  ; CHECK:      	mov	#42, r3
  ; CHECK-NEXT: 	mov	r9, r12
  ; CHECK-NEXT: 	mov	r7, r13
  ; CHECK-NEXT: 	call	#_nds_bar
  ; CHECK-NEXT: 	mov	r12, r8
  ; CHECK-NEXT: 	inc	r7
  ; CHECK-NEXT: 	cmp	#513, r7
  ; CHECK-NEXT: 	jne	.LBB0_4
  ; CHECK-NEXT: 	jmp	.LBB0_32
  ; CHECK-NEXT: .LBB0_5:
  ; CHECK-NEXT: 	cmp	#12, r10
  ; CHECK-NEXT: 	jne	.LBB0_23
  ; CHECK-NEXT: 	jmp	.LBB0_6
  ; CHECK-NEXT: .LBB0_6:
  ; CHECK-NEXT: 	mov	r8, r12
  ; CHECK-NEXT: 	mov	r8, r13
  ; CHECK-NEXT: 	call	#_nds___mspabi_mpyi
  ; CHECK-NEXT: 	mov	r12, r13
  ; CHECK-NEXT: 	mov	r8, r12
  ; CHECK-NEXT: 	call	#_nds_bar
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: .LBB0_7:
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	inc	r9
  ; CHECK-NEXT: 	cmp	#1023, r9
  ; CHECK-NEXT: 	jne	.LBB0_3
  ; CHECK-NEXT: 	jmp	.LBB0_51
  ; CHECK-NEXT: .LBB0_8:
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	cmp	#12, r10
  ; CHECK-NEXT: 	jne	.LBB0_21
  ; CHECK-NEXT: 	jmp	.LBB0_20
  ; CHECK-NEXT: .LBB0_9:
  ; CHECK-NEXT: 	clr	r10
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	jmp	.LBB0_73
  ; CHECK-NEXT: .LBB0_10:
  ; CHECK:      	clr	r8
  ; CHECK-NEXT: 	jmp	.LBB0_62
  ; CHECK-NEXT: .LBB0_11:
  ; CHECK:      	mov	#42, r3
  ; CHECK-NEXT: 	mov	r10, r12
  ; CHECK-NEXT: 	mov	r8, r13
  ; CHECK-NEXT: 	call	#_nds_bar
  ; CHECK-NEXT: 	mov	r12, r9
  ; CHECK-NEXT: 	inc	r8
  ; CHECK-NEXT: 	cmp	#513, r8
  ; CHECK-NEXT: 	jne	.LBB0_11
  ; CHECK-NEXT: 	jmp	.LBB0_63
  ; CHECK-NEXT: .LBB0_12:
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	mov	r9, r12
  ; CHECK-NEXT: 	mov	r9, r13
  ; CHECK-NEXT: 	call	#_nds___mspabi_mpyi
  ; CHECK-NEXT: 	mov	r12, r13
  ; CHECK-NEXT: 	mov	r9, r12
  ; CHECK-NEXT: 	call	#_nds_bar
  ; CHECK-NEXT: 	inc	r10
  ; CHECK-NEXT: 	cmp	#1023, r10
  ; CHECK-NEXT: 	jne	.LBB0_10
  ; CHECK-NEXT: 	jmp	.LBB0_74
  ; CHECK-NEXT: .LBB0_13:
  ; CHECK-NEXT: 	clr	r10
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	jmp	.LBB0_53
  ; CHECK-NEXT: .LBB0_14:
  ; CHECK:      	clr	r9
  ; CHECK-NEXT: 	jmp	.LBB0_84
  ; CHECK-NEXT: .LBB0_15:
  ; CHECK:      	mov	#42, r3
  ; CHECK-NEXT: 	mov	r10, r12
  ; CHECK-NEXT: 	mov	r9, r13
  ; CHECK-NEXT: 	call	#_nds_bar
  ; CHECK-NEXT: 	inc	r9
  ; CHECK-NEXT: 	cmp	#513, r9
  ; CHECK-NEXT: 	jne	.LBB0_15
  ; CHECK-NEXT: 	jmp	.LBB0_85
  ; CHECK-NEXT: .LBB0_16:
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	inc	r10
  ; CHECK-NEXT: 	cmp	#1023, r10
  ; CHECK-NEXT: 	jne	.LBB0_14
  ; CHECK-NEXT: 	jmp	.LBB0_96
  ; CHECK-NEXT: .LBB0_17:
  ; CHECK-NEXT: 	mov	#3, r12
  ; CHECK-NEXT: 	pop	r7
  ; CHECK-NEXT: 	pop	r8
  ; CHECK-NEXT: 	pop	r9
  ; CHECK-NEXT: 	pop	r10
  ; CHECK-NEXT: 	ret
  ; CHECK-NEXT: .LBB0_18:
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	jmp	.LBB0_19
  ; CHECK-NEXT: .LBB0_19:
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	jmp	.LBB0_22
  ; CHECK-NEXT: .LBB0_20:
  ; CHECK-NEXT: 	push	r10
  ; CHECK-NEXT: 	clr	r10
  ; CHECK-NEXT: 	jmp	.LBB0_24
  ; CHECK-NEXT: .LBB0_21:
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	push	r10
  ; CHECK-NEXT: 	clr	r10
  ; CHECK-NEXT: 	jmp	.LBB0_34
  ; CHECK-NEXT: .LBB0_22:
  ; CHECK-NEXT: 	push	r10
  ; CHECK-NEXT: 	clr	r10
  ; CHECK-NEXT: 	jmp	.LBB0_42
  ; CHECK-NEXT: .LBB0_23:
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	call	#_ndd___mspabi_mpyi
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	call	#_ndd_bar
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	jmp	.LBB0_7
  ; CHECK-NEXT: .LBB0_24:
  ; CHECK:      	nop
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	call	#_ndd_bar
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	jmp	.LBB0_27
  ; CHECK-NEXT: .LBB0_25:
  ; CHECK-NEXT: 	inc	r10
  ; CHECK-NEXT: 	cmp	#1023, r10
  ; CHECK-NEXT: 	jl	.LBB0_24
  ; CHECK-NEXT: 	jmp	.LBB0_26
  ; CHECK-NEXT: .LBB0_26:
  ; CHECK-NEXT: 	pop	r10
  ; CHECK-NEXT: 	jmp	.LBB0_9
  ; CHECK-NEXT: .LBB0_27:
  ; CHECK-NEXT: 	push	r10
  ; CHECK-NEXT: 	clr	r10
  ; CHECK-NEXT: 	jmp	.LBB0_28
  ; CHECK-NEXT: .LBB0_28:
  ; CHECK:      	jmp	.LBB0_29
  ; CHECK-NEXT: .LBB0_29:
  ; CHECK-NEXT: 	inc	r10
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	call	#_ndd_bar
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	cmp	#513, r10
  ; CHECK-NEXT: 	jl	.LBB0_28
  ; CHECK-NEXT: 	jmp	.LBB0_30
  ; CHECK-NEXT: .LBB0_30:
  ; CHECK-NEXT: 	pop	r10
  ; CHECK-NEXT: 	jmp	.LBB0_33
  ; CHECK-NEXT: .LBB0_31:
  ; CHECK-NEXT: 	mov	2(r0), r3
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	jmp	.LBB0_4
  ; CHECK-NEXT: .LBB0_32:
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	jmp	.LBB0_5
  ; CHECK-NEXT: .LBB0_33:
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	call	#_ndd___mspabi_mpyi
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	call	#_ndd_bar
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	jmp	.LBB0_25
  ; CHECK-NEXT: .LBB0_34:
  ; CHECK:      	nop
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	call	#_ndd_bar
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	jmp	.LBB0_37
  ; CHECK-NEXT: .LBB0_35:
  ; CHECK-NEXT: 	inc	r10
  ; CHECK-NEXT: 	cmp	#1023, r10
  ; CHECK-NEXT: 	jl	.LBB0_34
  ; CHECK-NEXT: 	jmp	.LBB0_36
  ; CHECK-NEXT: .LBB0_36:
  ; CHECK-NEXT: 	pop	r10
  ; CHECK-NEXT: 	jmp	.LBB0_13
  ; CHECK-NEXT: .LBB0_37:
  ; CHECK-NEXT: 	push	r10
  ; CHECK-NEXT: 	clr	r10
  ; CHECK-NEXT: 	jmp	.LBB0_38
  ; CHECK-NEXT: .LBB0_38:
  ; CHECK:      	jmp	.LBB0_39
  ; CHECK-NEXT: .LBB0_39:
  ; CHECK-NEXT: 	inc	r10
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	call	#_ndd_bar
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	cmp	#513, r10
  ; CHECK-NEXT: 	jl	.LBB0_38
  ; CHECK-NEXT: 	jmp	.LBB0_40
  ; CHECK-NEXT: .LBB0_40:
  ; CHECK-NEXT: 	pop	r10
  ; CHECK-NEXT: 	jmp	.LBB0_41
  ; CHECK-NEXT: .LBB0_41:
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	call	#_ndd___mspabi_mpyi
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	call	#_ndd_bar
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	jmp	.LBB0_35
  ; CHECK-NEXT: .LBB0_42:
  ; CHECK:      	nop
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	call	#_ndd_bar
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	jmp	.LBB0_45
  ; CHECK-NEXT: .LBB0_43:
  ; CHECK-NEXT: 	inc	r10
  ; CHECK-NEXT: 	cmp	#1023, r10
  ; CHECK-NEXT: 	jl	.LBB0_42
  ; CHECK-NEXT: 	jmp	.LBB0_44
  ; CHECK-NEXT: .LBB0_44:
  ; CHECK-NEXT: 	pop	r10
  ; CHECK-NEXT: 	jmp	.LBB0_52
  ; CHECK-NEXT: .LBB0_45:
  ; CHECK-NEXT: 	push	r10
  ; CHECK-NEXT: 	clr	r10
  ; CHECK-NEXT: 	jmp	.LBB0_46
  ; CHECK-NEXT: .LBB0_46:
  ; CHECK:      	jmp	.LBB0_47
  ; CHECK-NEXT: .LBB0_47:
  ; CHECK-NEXT: 	inc	r10
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	call	#_ndd_bar
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	cmp	#513, r10
  ; CHECK-NEXT: 	jl	.LBB0_46
  ; CHECK-NEXT: 	jmp	.LBB0_48
  ; CHECK-NEXT: .LBB0_48:
  ; CHECK-NEXT: 	pop	r10
  ; CHECK-NEXT: 	jmp	.LBB0_49
  ; CHECK-NEXT: .LBB0_49:
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	call	#_ndd___mspabi_mpyi
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	call	#_ndd_bar
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	jmp	.LBB0_43
  ; CHECK-NEXT: .LBB0_50:
  ; CHECK-NEXT: 	mov	2(r0), r3
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	jmp	.LBB0_3
  ; CHECK-NEXT: .LBB0_51:
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	jmp	.LBB0_52
  ; CHECK-NEXT: .LBB0_52:
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	jmp	.LBB0_54
  ; CHECK-NEXT: .LBB0_53:
  ; CHECK-NEXT: 	push	r10
  ; CHECK-NEXT: 	clr	r10
  ; CHECK-NEXT: 	jmp	.LBB0_55
  ; CHECK-NEXT: .LBB0_54:
  ; CHECK-NEXT: 	push	r10
  ; CHECK-NEXT: 	clr	r10
  ; CHECK-NEXT: 	jmp	.LBB0_65
  ; CHECK-NEXT: .LBB0_55:
  ; CHECK:      	nop
  ; CHECK-NEXT: 	jmp	.LBB0_58
  ; CHECK-NEXT: .LBB0_56:
  ; CHECK-NEXT: 	inc	r10
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	call	#_ndd___mspabi_mpyi
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	call	#_ndd_bar
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	cmp	#1023, r10
  ; CHECK-NEXT: 	jl	.LBB0_55
  ; CHECK-NEXT: 	jmp	.LBB0_57
  ; CHECK-NEXT: .LBB0_57:
  ; CHECK-NEXT: 	pop	r10
  ; CHECK-NEXT: 	jmp	.LBB0_95
  ; CHECK-NEXT: .LBB0_58:
  ; CHECK-NEXT: 	push	r10
  ; CHECK-NEXT: 	clr	r10
  ; CHECK-NEXT: 	jmp	.LBB0_59
  ; CHECK-NEXT: .LBB0_59:
  ; CHECK:      	jmp	.LBB0_60
  ; CHECK-NEXT: .LBB0_60:
  ; CHECK-NEXT: 	inc	r10
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	call	#_ndd_bar
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	cmp	#513, r10
  ; CHECK-NEXT: 	jl	.LBB0_59
  ; CHECK-NEXT: 	jmp	.LBB0_61
  ; CHECK-NEXT: .LBB0_61:
  ; CHECK-NEXT: 	pop	r10
  ; CHECK-NEXT: 	jmp	.LBB0_64
  ; CHECK-NEXT: .LBB0_62:
  ; CHECK-NEXT: 	mov	2(r0), r3
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	jmp	.LBB0_11
  ; CHECK-NEXT: .LBB0_63:
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	jmp	.LBB0_12
  ; CHECK-NEXT: .LBB0_64:
  ; CHECK-NEXT: 	jmp	.LBB0_56
  ; CHECK-NEXT: .LBB0_65:
  ; CHECK:      	nop
  ; CHECK-NEXT: 	jmp	.LBB0_68
  ; CHECK-NEXT: .LBB0_66:
  ; CHECK-NEXT: 	inc	r10
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	call	#_ndd___mspabi_mpyi
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	call	#_ndd_bar
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	cmp	#1023, r10
  ; CHECK-NEXT: 	jl	.LBB0_65
  ; CHECK-NEXT: 	jmp	.LBB0_67
  ; CHECK-NEXT: .LBB0_67:
  ; CHECK-NEXT: 	pop	r10
  ; CHECK-NEXT: 	jmp	.LBB0_75
  ; CHECK-NEXT: .LBB0_68:
  ; CHECK-NEXT: 	push	r10
  ; CHECK-NEXT: 	clr	r10
  ; CHECK-NEXT: 	jmp	.LBB0_69
  ; CHECK-NEXT: .LBB0_69:
  ; CHECK:      	jmp	.LBB0_70
  ; CHECK-NEXT: .LBB0_70:
  ; CHECK-NEXT: 	inc	r10
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	call	#_ndd_bar
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	cmp	#513, r10
  ; CHECK-NEXT: 	jl	.LBB0_69
  ; CHECK-NEXT: 	jmp	.LBB0_71
  ; CHECK-NEXT: .LBB0_71:
  ; CHECK-NEXT: 	pop	r10
  ; CHECK-NEXT: 	jmp	.LBB0_72
  ; CHECK-NEXT: .LBB0_72:
  ; CHECK-NEXT: 	jmp	.LBB0_66
  ; CHECK-NEXT: .LBB0_73:
  ; CHECK-NEXT: 	mov	2(r0), r3
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	jmp	.LBB0_10
  ; CHECK-NEXT: .LBB0_74:
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	jmp	.LBB0_76
  ; CHECK-NEXT: .LBB0_75:
  ; CHECK-NEXT: 	push	r10
  ; CHECK-NEXT: 	clr	r10
  ; CHECK-NEXT: 	jmp	.LBB0_77
  ; CHECK-NEXT: .LBB0_76:
  ; CHECK-NEXT: 	push	r10
  ; CHECK-NEXT: 	clr	r10
  ; CHECK-NEXT: 	jmp	.LBB0_87
  ; CHECK-NEXT: .LBB0_77:
  ; CHECK:      	nop
  ; CHECK-NEXT: 	jmp	.LBB0_80
  ; CHECK-NEXT: .LBB0_78:
  ; CHECK-NEXT: 	inc	r10
  ; CHECK-NEXT: 	cmp	#1023, r10
  ; CHECK-NEXT: 	jl	.LBB0_77
  ; CHECK-NEXT: 	jmp	.LBB0_79
  ; CHECK-NEXT: .LBB0_79:
  ; CHECK-NEXT: 	pop	r10
  ; CHECK-NEXT: 	jmp	.LBB0_17
  ; CHECK-NEXT: .LBB0_80:
  ; CHECK-NEXT: 	push	r10
  ; CHECK-NEXT: 	clr	r10
  ; CHECK-NEXT: 	jmp	.LBB0_81
  ; CHECK-NEXT: .LBB0_81:
  ; CHECK:      	jmp	.LBB0_82
  ; CHECK-NEXT: .LBB0_82:
  ; CHECK-NEXT: 	inc	r10
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	call	#_ndd_bar
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	cmp	#513, r10
  ; CHECK-NEXT: 	jl	.LBB0_81
  ; CHECK-NEXT: 	jmp	.LBB0_83
  ; CHECK-NEXT: .LBB0_83:
  ; CHECK-NEXT: 	pop	r10
  ; CHECK-NEXT: 	jmp	.LBB0_86
  ; CHECK-NEXT: .LBB0_84:
  ; CHECK-NEXT: 	mov	2(r0), r3
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	jmp	.LBB0_15
  ; CHECK-NEXT: .LBB0_85:
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	jmp	.LBB0_16
  ; CHECK-NEXT: .LBB0_86:
  ; CHECK-NEXT: 	jmp	.LBB0_78
  ; CHECK-NEXT: .LBB0_87:
  ; CHECK:      	nop
  ; CHECK-NEXT: 	jmp	.LBB0_90
  ; CHECK-NEXT: .LBB0_88:
  ; CHECK-NEXT: 	inc	r10
  ; CHECK-NEXT: 	cmp	#1023, r10
  ; CHECK-NEXT: 	jl	.LBB0_87
  ; CHECK-NEXT: 	jmp	.LBB0_89
  ; CHECK-NEXT: .LBB0_89:
  ; CHECK-NEXT: 	pop	r10
  ; CHECK-NEXT: 	jmp	.LBB0_17
  ; CHECK-NEXT: .LBB0_90:
  ; CHECK-NEXT: 	push	r10
  ; CHECK-NEXT: 	clr	r10
  ; CHECK-NEXT: 	jmp	.LBB0_91
  ; CHECK-NEXT: .LBB0_91:
  ; CHECK:      	jmp	.LBB0_92
  ; CHECK-NEXT: .LBB0_92:
  ; CHECK-NEXT: 	inc	r10
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	call	#_ndd_bar
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	cmp	#513, r10
  ; CHECK-NEXT: 	jl	.LBB0_91
  ; CHECK-NEXT: 	jmp	.LBB0_93
  ; CHECK-NEXT: .LBB0_93:
  ; CHECK-NEXT: 	pop	r10
  ; CHECK-NEXT: 	jmp	.LBB0_94
  ; CHECK-NEXT: .LBB0_94:
  ; CHECK-NEXT: 	jmp	.LBB0_88
  ; CHECK-NEXT: .LBB0_95:
  ; CHECK-NEXT: 	mov	2(r0), r3
  ; CHECK-NEXT: 	nop
  ; CHECK-NEXT: 	jmp	.LBB0_14
  ; CHECK-NEXT: .LBB0_96:
  ; CHECK-NEXT: 	mov	#42, r3
  ; CHECK-NEXT: 	jmp	.LBB0_17
  ; CHECK-NEXT: .Lfunc_end0:
...
